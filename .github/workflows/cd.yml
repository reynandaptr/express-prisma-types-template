name: CICD
env:
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  cicd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v1
        with:
          node-version: 18.12.0
      - id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
      - run: npm version ${{ steps.tag_version.outputs.new_tag }} --no-git-tag-version
      - run: npm install -g pnpm
      - run: pnpm install
      - run: npx prisma generate
      - run: pnpm build
      - run: rm -rf src
      - run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
      - run: pnpm publish --no-git-checks
      - run: rm -rf .npmrc
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "feat: update types and migration ${{ steps.tag_version.outputs.new_tag }}"
          push: true
          tag: '${{ steps.tag_version.outputs.new_tag }}'
          new_branch: update-types-migration-${{ steps.tag_version.outputs.new_tag }}
      - uses: fregante/setup-git-user@v2
      - run: make GIT_REPOSITORY_HOST=${{ vars.GIT_REPOSITORY_HOST }} PROJECT_GROUP=${{ vars.PROJECT_GROUP }} PROJECT_NAME=${{ vars.PROJECT_NAME }} TAG_VERSION=${{ steps.tag_version.outputs.new_tag }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
      - run: |
          cd ./docs
          npm install -g vercel
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
      - run: rm -rf docs
